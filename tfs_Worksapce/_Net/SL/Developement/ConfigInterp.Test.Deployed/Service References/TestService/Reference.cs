//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConfigInterp.Test.Deployed.TestService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InterpDataBase", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.DeleteCipInterpData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.InterpConfigBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.InquireOutputDataBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.InquireSimpleOutputData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.InterpDetailOutData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.InterpDetailData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.InterpDataStatusBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.InquireInterpNarrativeData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.InquireNarrativeOutputData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UpdateInterpNarrativeData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.StatusData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.CreateInterpNarrativeData))]
    public partial class InterpDataBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short AdmitInterpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.LineOfBusiness LineOfBusinessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short OutlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short SubCategoryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short AdmitInterp {
            get {
                return this.AdmitInterpField;
            }
            set {
                if ((this.AdmitInterpField.Equals(value) != true)) {
                    this.AdmitInterpField = value;
                    this.RaisePropertyChanged("AdmitInterp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((this.CategoryField.Equals(value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.LineOfBusiness LineOfBusiness {
            get {
                return this.LineOfBusinessField;
            }
            set {
                if ((this.LineOfBusinessField.Equals(value) != true)) {
                    this.LineOfBusinessField = value;
                    this.RaisePropertyChanged("LineOfBusiness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Outline {
            get {
                return this.OutlineField;
            }
            set {
                if ((this.OutlineField.Equals(value) != true)) {
                    this.OutlineField = value;
                    this.RaisePropertyChanged("Outline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short SubCategory {
            get {
                return this.SubCategoryField;
            }
            set {
                if ((this.SubCategoryField.Equals(value) != true)) {
                    this.SubCategoryField = value;
                    this.RaisePropertyChanged("SubCategory");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteCipInterpData", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class DeleteCipInterpData : ConfigInterp.Test.Deployed.TestService.InterpDataBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.InterpStatus StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.InterpStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InterpConfigBase", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.InquireOutputDataBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.InquireSimpleOutputData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.InterpDetailOutData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.InterpDetailData))]
    public partial class InterpConfigBase : ConfigInterp.Test.Deployed.TestService.InterpDataBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.InterpStatus CurrentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short EmployeeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.Plan EmployeeRegionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.InterpStatus CurrentStatus {
            get {
                return this.CurrentStatusField;
            }
            set {
                if ((this.CurrentStatusField.Equals(value) != true)) {
                    this.CurrentStatusField = value;
                    this.RaisePropertyChanged("CurrentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short EmployeeNumber {
            get {
                return this.EmployeeNumberField;
            }
            set {
                if ((this.EmployeeNumberField.Equals(value) != true)) {
                    this.EmployeeNumberField = value;
                    this.RaisePropertyChanged("EmployeeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.Plan EmployeeRegion {
            get {
                return this.EmployeeRegionField;
            }
            set {
                if ((this.EmployeeRegionField.Equals(value) != true)) {
                    this.EmployeeRegionField = value;
                    this.RaisePropertyChanged("EmployeeRegion");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InquireOutputDataBase", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.InquireSimpleOutputData))]
    public partial class InquireOutputDataBase : ConfigInterp.Test.Deployed.TestService.InterpConfigBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastEditedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastEdited {
            get {
                return this.LastEditedField;
            }
            set {
                if ((this.LastEditedField.Equals(value) != true)) {
                    this.LastEditedField = value;
                    this.RaisePropertyChanged("LastEdited");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InquireSimpleOutputData", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class InquireSimpleOutputData : ConfigInterp.Test.Deployed.TestService.InquireOutputDataBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short LevelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InterpDetailOutData", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class InterpDetailOutData : ConfigInterp.Test.Deployed.TestService.InterpConfigBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.ConfiguredSteps ConfiguredStepsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastEditedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.ConfiguredSteps ConfiguredSteps {
            get {
                return this.ConfiguredStepsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfiguredStepsField, value) != true)) {
                    this.ConfiguredStepsField = value;
                    this.RaisePropertyChanged("ConfiguredSteps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastEdited {
            get {
                return this.LastEditedField;
            }
            set {
                if ((this.LastEditedField.Equals(value) != true)) {
                    this.LastEditedField = value;
                    this.RaisePropertyChanged("LastEdited");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InterpDetailData", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class InterpDetailData : ConfigInterp.Test.Deployed.TestService.InterpConfigBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.ConfiguredSteps ConfiguredStepsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.ConfiguredSteps ConfiguredSteps {
            get {
                return this.ConfiguredStepsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfiguredStepsField, value) != true)) {
                    this.ConfiguredStepsField = value;
                    this.RaisePropertyChanged("ConfiguredSteps");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InterpDataStatusBase", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.InquireInterpNarrativeData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.InquireNarrativeOutputData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UpdateInterpNarrativeData))]
    public partial class InterpDataStatusBase : ConfigInterp.Test.Deployed.TestService.InterpDataBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.Status StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InquireInterpNarrativeData", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class InquireInterpNarrativeData : ConfigInterp.Test.Deployed.TestService.InterpDataStatusBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InquireNarrativeOutputData", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class InquireNarrativeOutputData : ConfigInterp.Test.Deployed.TestService.InterpDataStatusBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MaintenanceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short SequenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StatusDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeName {
            get {
                return this.EmployeeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeNameField, value) != true)) {
                    this.EmployeeNameField = value;
                    this.RaisePropertyChanged("EmployeeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeNumber {
            get {
                return this.EmployeeNumberField;
            }
            set {
                if ((this.EmployeeNumberField.Equals(value) != true)) {
                    this.EmployeeNumberField = value;
                    this.RaisePropertyChanged("EmployeeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MaintenanceDate {
            get {
                return this.MaintenanceDateField;
            }
            set {
                if ((this.MaintenanceDateField.Equals(value) != true)) {
                    this.MaintenanceDateField = value;
                    this.RaisePropertyChanged("MaintenanceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short SequenceNumber {
            get {
                return this.SequenceNumberField;
            }
            set {
                if ((this.SequenceNumberField.Equals(value) != true)) {
                    this.SequenceNumberField = value;
                    this.RaisePropertyChanged("SequenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StatusDate {
            get {
                return this.StatusDateField;
            }
            set {
                if ((this.StatusDateField.Equals(value) != true)) {
                    this.StatusDateField = value;
                    this.RaisePropertyChanged("StatusDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateInterpNarrativeData", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class UpdateInterpNarrativeData : ConfigInterp.Test.Deployed.TestService.InterpDataStatusBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] NarrativeLinesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] NarrativeLines {
            get {
                return this.NarrativeLinesField;
            }
            set {
                if ((object.ReferenceEquals(this.NarrativeLinesField, value) != true)) {
                    this.NarrativeLinesField = value;
                    this.RaisePropertyChanged("NarrativeLines");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusData", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class StatusData : ConfigInterp.Test.Deployed.TestService.InterpDataBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.InterpStatus CurrentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.InterpStatus TargetStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.InterpStatus CurrentStatus {
            get {
                return this.CurrentStatusField;
            }
            set {
                if ((this.CurrentStatusField.Equals(value) != true)) {
                    this.CurrentStatusField = value;
                    this.RaisePropertyChanged("CurrentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.InterpStatus TargetStatus {
            get {
                return this.TargetStatusField;
            }
            set {
                if ((this.TargetStatusField.Equals(value) != true)) {
                    this.TargetStatusField = value;
                    this.RaisePropertyChanged("TargetStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateInterpNarrativeData", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class CreateInterpNarrativeData : ConfigInterp.Test.Deployed.TestService.InterpDataBase {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LineOfBusiness", Namespace="http://schemas.datacontract.org/2004/07/ConfigInterp.Contracts.DataContracts")]
    public enum LineOfBusiness : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Institutional = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Professional = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InterpStatus", Namespace="http://schemas.datacontract.org/2004/07/ConfigInterp.Contracts.DataContracts")]
    public enum InterpStatus : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Draft = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DraftRevision = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Test = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deactivated = 20,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Plan", Namespace="http://schemas.datacontract.org/2004/07/ConfigInterp.Contracts.DataContracts")]
    public enum Plan : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BCBSND = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BCBSWY = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BCBSNE = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConfiguredSteps", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class ConfiguredSteps : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.ConditionalStep[] ConditionalStepsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.ExceptionStep[] ExceptionStepsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.UnconditionalStep[] UnconditionalStepsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.ConditionalStep[] ConditionalSteps {
            get {
                return this.ConditionalStepsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionalStepsField, value) != true)) {
                    this.ConditionalStepsField = value;
                    this.RaisePropertyChanged("ConditionalSteps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.ExceptionStep[] ExceptionSteps {
            get {
                return this.ExceptionStepsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionStepsField, value) != true)) {
                    this.ExceptionStepsField = value;
                    this.RaisePropertyChanged("ExceptionSteps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.UnconditionalStep[] UnconditionalSteps {
            get {
                return this.UnconditionalStepsField;
            }
            set {
                if ((object.ReferenceEquals(this.UnconditionalStepsField, value) != true)) {
                    this.UnconditionalStepsField = value;
                    this.RaisePropertyChanged("UnconditionalSteps");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConditionalStep", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class ConditionalStep : ConfigInterp.Test.Deployed.TestService.ConfiguredStep {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.Condition[] ConditionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.StepAction[] FalseActionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.StepAction[] TrueActionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.Condition[] Conditions {
            get {
                return this.ConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionsField, value) != true)) {
                    this.ConditionsField = value;
                    this.RaisePropertyChanged("Conditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.StepAction[] FalseActions {
            get {
                return this.FalseActionsField;
            }
            set {
                if ((object.ReferenceEquals(this.FalseActionsField, value) != true)) {
                    this.FalseActionsField = value;
                    this.RaisePropertyChanged("FalseActions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.StepAction[] TrueActions {
            get {
                return this.TrueActionsField;
            }
            set {
                if ((object.ReferenceEquals(this.TrueActionsField, value) != true)) {
                    this.TrueActionsField = value;
                    this.RaisePropertyChanged("TrueActions");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExceptionStep", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class ExceptionStep : ConfigInterp.Test.Deployed.TestService.ConfiguredStep {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ExceptionIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ExceptionId {
            get {
                return this.ExceptionIdField;
            }
            set {
                if ((this.ExceptionIdField.Equals(value) != true)) {
                    this.ExceptionIdField = value;
                    this.RaisePropertyChanged("ExceptionId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnconditionalStep", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class UnconditionalStep : ConfigInterp.Test.Deployed.TestService.ConfiguredStep {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.StepAction ActionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.StepAction Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConfiguredStep", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ExceptionStep))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UnconditionalStep))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ConditionalStep))]
    public partial class ConfiguredStep : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IndexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Condition", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class Condition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.AlphaValueWithThru[] AlphaParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.CompareType CompareTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.DecimalValueWithThru[] DecimalParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.FieldType FieldTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.NumericValueWithThru[] NumericParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.ConditionOperation OperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.RecordValueType ParameterTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short QualifierField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.AlphaValueWithThru[] AlphaParameters {
            get {
                return this.AlphaParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.AlphaParametersField, value) != true)) {
                    this.AlphaParametersField = value;
                    this.RaisePropertyChanged("AlphaParameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.CompareType CompareType {
            get {
                return this.CompareTypeField;
            }
            set {
                if ((this.CompareTypeField.Equals(value) != true)) {
                    this.CompareTypeField = value;
                    this.RaisePropertyChanged("CompareType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.DecimalValueWithThru[] DecimalParameters {
            get {
                return this.DecimalParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.DecimalParametersField, value) != true)) {
                    this.DecimalParametersField = value;
                    this.RaisePropertyChanged("DecimalParameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldNumber {
            get {
                return this.FieldNumberField;
            }
            set {
                if ((this.FieldNumberField.Equals(value) != true)) {
                    this.FieldNumberField = value;
                    this.RaisePropertyChanged("FieldNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.FieldType FieldType {
            get {
                return this.FieldTypeField;
            }
            set {
                if ((this.FieldTypeField.Equals(value) != true)) {
                    this.FieldTypeField = value;
                    this.RaisePropertyChanged("FieldType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.NumericValueWithThru[] NumericParameters {
            get {
                return this.NumericParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.NumericParametersField, value) != true)) {
                    this.NumericParametersField = value;
                    this.RaisePropertyChanged("NumericParameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.ConditionOperation Operation {
            get {
                return this.OperationField;
            }
            set {
                if ((this.OperationField.Equals(value) != true)) {
                    this.OperationField = value;
                    this.RaisePropertyChanged("Operation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.RecordValueType ParameterType {
            get {
                return this.ParameterTypeField;
            }
            set {
                if ((this.ParameterTypeField.Equals(value) != true)) {
                    this.ParameterTypeField = value;
                    this.RaisePropertyChanged("ParameterType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Qualifier {
            get {
                return this.QualifierField;
            }
            set {
                if ((this.QualifierField.Equals(value) != true)) {
                    this.QualifierField = value;
                    this.RaisePropertyChanged("Qualifier");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StepAction", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class StepAction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ActionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.AlphaValue[] AlphaParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.DecimalValue[] DecimalParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.NumericValue[] NumericParametersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ActionId {
            get {
                return this.ActionIdField;
            }
            set {
                if ((this.ActionIdField.Equals(value) != true)) {
                    this.ActionIdField = value;
                    this.RaisePropertyChanged("ActionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.AlphaValue[] AlphaParameters {
            get {
                return this.AlphaParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.AlphaParametersField, value) != true)) {
                    this.AlphaParametersField = value;
                    this.RaisePropertyChanged("AlphaParameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.DecimalValue[] DecimalParameters {
            get {
                return this.DecimalParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.DecimalParametersField, value) != true)) {
                    this.DecimalParametersField = value;
                    this.RaisePropertyChanged("DecimalParameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.NumericValue[] NumericParameters {
            get {
                return this.NumericParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.NumericParametersField, value) != true)) {
                    this.NumericParametersField = value;
                    this.RaisePropertyChanged("NumericParameters");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlphaValue", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class AlphaValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DecimalValue", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class DecimalValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NumericValue", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class NumericValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlphaValueWithThru", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class AlphaValueWithThru : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueThruField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValueThru {
            get {
                return this.ValueThruField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueThruField, value) != true)) {
                    this.ValueThruField = value;
                    this.RaisePropertyChanged("ValueThru");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompareType", Namespace="http://schemas.datacontract.org/2004/07/ConfigInterp.Contracts.DataContracts")]
    public enum CompareType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Equals = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotEqual = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GreaterThan = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GreaterThanOrEqual = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LessThan = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LessThanOrEqual = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        True = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        False = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Found = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFound = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DecimalValueWithThru", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class DecimalValueWithThru : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ValueThruField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ValueThru {
            get {
                return this.ValueThruField;
            }
            set {
                if ((this.ValueThruField.Equals(value) != true)) {
                    this.ValueThruField = value;
                    this.RaisePropertyChanged("ValueThru");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FieldType", Namespace="http://schemas.datacontract.org/2004/07/ConfigInterp.Contracts.DataContracts")]
    public enum FieldType : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fixed = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Line = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Calculated = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KeyWord = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Limit = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrentLineAccumulator = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Accumulator = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NumericValueWithThru", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class NumericValueWithThru : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ValueThruField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ValueThru {
            get {
                return this.ValueThruField;
            }
            set {
                if ((this.ValueThruField.Equals(value) != true)) {
                    this.ValueThruField = value;
                    this.RaisePropertyChanged("ValueThru");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConditionOperation", Namespace="http://schemas.datacontract.org/2004/07/ConfigInterp.Contracts.DataContracts")]
    public enum ConditionOperation : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        If = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AndIf = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrIf = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecordValueType", Namespace="http://schemas.datacontract.org/2004/07/ConfigInterp.Contracts.DataContracts")]
    public enum RecordValueType : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotApplicable = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Alpha = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Numeric = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Decimal = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Status", Namespace="http://schemas.datacontract.org/2004/07/ConfigInterp.Contracts.DataContracts")]
    public enum Status : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Maintenance = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Revision = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Prior = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorItem", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class ErrorItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prop {
            get {
                return this.PropField;
            }
            set {
                if ((object.ReferenceEquals(this.PropField, value) != true)) {
                    this.PropField = value;
                    this.RaisePropertyChanged("Prop");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResult", Namespace="http://schemas.datacontract.org/2004/07/ConfigInterp.Contracts.DataContracts")]
    public enum OperationResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFound = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InterpNotConfigurable = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlreadyExists = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ZeroLevelDoesNotExist = 32,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseStatus", Namespace="http://schemas.datacontract.org/2004/07/ConfigInterp.Contracts.DataContracts")]
    public enum ResponseStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failure = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rejected = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CoreLinkSolutionFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UnhandledExceptionFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ServiceUnavailableFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ValidationFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConfigInterp.Test.Deployed.TestService.BusinessFault))]
    public partial class CoreLinkSolutionFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.FaultMessage[] FaultMessagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.FaultMessage[] FaultMessages {
            get {
                return this.FaultMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.FaultMessagesField, value) != true)) {
                    this.FaultMessagesField = value;
                    this.RaisePropertyChanged("FaultMessages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnhandledExceptionFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
    [System.SerializableAttribute()]
    public partial class UnhandledExceptionFault : ConfigInterp.Test.Deployed.TestService.CoreLinkSolutionFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceUnavailableFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
    [System.SerializableAttribute()]
    public partial class ServiceUnavailableFault : ConfigInterp.Test.Deployed.TestService.CoreLinkSolutionFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
    [System.SerializableAttribute()]
    public partial class ValidationFault : ConfigInterp.Test.Deployed.TestService.CoreLinkSolutionFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
    [System.SerializableAttribute()]
    public partial class BusinessFault : ConfigInterp.Test.Deployed.TestService.CoreLinkSolutionFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultMessage", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
    [System.SerializableAttribute()]
    public partial class FaultMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DescriptionCommon", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class DescriptionCommon : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PseudoDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PseudoDescription {
            get {
                return this.PseudoDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PseudoDescriptionField, value) != true)) {
                    this.PseudoDescriptionField = value;
                    this.RaisePropertyChanged("PseudoDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TypeId {
            get {
                return this.TypeIdField;
            }
            set {
                if ((this.TypeIdField.Equals(value) != true)) {
                    this.TypeIdField = value;
                    this.RaisePropertyChanged("TypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionParameterDescriptionValidationInfoData", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class ActionParameterDescriptionValidationInfoData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatInputHintDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatInputPatternField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short FormatTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOptionalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MaximumSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MinimumSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short OrderSequenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParameterDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParameterPseudoDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ValueTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormatDescription {
            get {
                return this.FormatDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatDescriptionField, value) != true)) {
                    this.FormatDescriptionField = value;
                    this.RaisePropertyChanged("FormatDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormatInputHintDescription {
            get {
                return this.FormatInputHintDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatInputHintDescriptionField, value) != true)) {
                    this.FormatInputHintDescriptionField = value;
                    this.RaisePropertyChanged("FormatInputHintDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormatInputPattern {
            get {
                return this.FormatInputPatternField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatInputPatternField, value) != true)) {
                    this.FormatInputPatternField = value;
                    this.RaisePropertyChanged("FormatInputPattern");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short FormatTypeId {
            get {
                return this.FormatTypeIdField;
            }
            set {
                if ((this.FormatTypeIdField.Equals(value) != true)) {
                    this.FormatTypeIdField = value;
                    this.RaisePropertyChanged("FormatTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOptional {
            get {
                return this.IsOptionalField;
            }
            set {
                if ((this.IsOptionalField.Equals(value) != true)) {
                    this.IsOptionalField = value;
                    this.RaisePropertyChanged("IsOptional");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MaximumSize {
            get {
                return this.MaximumSizeField;
            }
            set {
                if ((this.MaximumSizeField.Equals(value) != true)) {
                    this.MaximumSizeField = value;
                    this.RaisePropertyChanged("MaximumSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MinimumSize {
            get {
                return this.MinimumSizeField;
            }
            set {
                if ((this.MinimumSizeField.Equals(value) != true)) {
                    this.MinimumSizeField = value;
                    this.RaisePropertyChanged("MinimumSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short OrderSequence {
            get {
                return this.OrderSequenceField;
            }
            set {
                if ((this.OrderSequenceField.Equals(value) != true)) {
                    this.OrderSequenceField = value;
                    this.RaisePropertyChanged("OrderSequence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParameterDescription {
            get {
                return this.ParameterDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ParameterDescriptionField, value) != true)) {
                    this.ParameterDescriptionField = value;
                    this.RaisePropertyChanged("ParameterDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParameterPseudoDescription {
            get {
                return this.ParameterPseudoDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ParameterPseudoDescriptionField, value) != true)) {
                    this.ParameterPseudoDescriptionField = value;
                    this.RaisePropertyChanged("ParameterPseudoDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ValueTypeId {
            get {
                return this.ValueTypeIdField;
            }
            set {
                if ((this.ValueTypeIdField.Equals(value) != true)) {
                    this.ValueTypeIdField = value;
                    this.RaisePropertyChanged("ValueTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AvailableOutlineCategoryData", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class AvailableOutlineCategoryData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short OutlineIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PseudoCategoryLiteralDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short StatusIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short OutlineId {
            get {
                return this.OutlineIdField;
            }
            set {
                if ((this.OutlineIdField.Equals(value) != true)) {
                    this.OutlineIdField = value;
                    this.RaisePropertyChanged("OutlineId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PseudoCategoryLiteralDescription {
            get {
                return this.PseudoCategoryLiteralDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PseudoCategoryLiteralDescriptionField, value) != true)) {
                    this.PseudoCategoryLiteralDescriptionField = value;
                    this.RaisePropertyChanged("PseudoCategoryLiteralDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryData", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class CategoryData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short OutlineField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((this.CategoryField.Equals(value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Outline {
            get {
                return this.OutlineField;
            }
            set {
                if ((this.OutlineField.Equals(value) != true)) {
                    this.OutlineField = value;
                    this.RaisePropertyChanged("Outline");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FieldNameData", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class FieldNameData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldPseudoDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualifierPseudoDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldDescription {
            get {
                return this.FieldDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldDescriptionField, value) != true)) {
                    this.FieldDescriptionField = value;
                    this.RaisePropertyChanged("FieldDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldId {
            get {
                return this.FieldIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldIdField, value) != true)) {
                    this.FieldIdField = value;
                    this.RaisePropertyChanged("FieldId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldPseudoDescription {
            get {
                return this.FieldPseudoDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldPseudoDescriptionField, value) != true)) {
                    this.FieldPseudoDescriptionField = value;
                    this.RaisePropertyChanged("FieldPseudoDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualifierPseudoDescription {
            get {
                return this.QualifierPseudoDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QualifierPseudoDescriptionField, value) != true)) {
                    this.QualifierPseudoDescriptionField = value;
                    this.RaisePropertyChanged("QualifierPseudoDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FieldValidationInfoData", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class FieldValidationInfoData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatInputHintDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatInputPatternField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short FormatTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MaxSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MinSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short QualifierTypeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ValueTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormatDescription {
            get {
                return this.FormatDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatDescriptionField, value) != true)) {
                    this.FormatDescriptionField = value;
                    this.RaisePropertyChanged("FormatDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormatInputHintDescription {
            get {
                return this.FormatInputHintDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatInputHintDescriptionField, value) != true)) {
                    this.FormatInputHintDescriptionField = value;
                    this.RaisePropertyChanged("FormatInputHintDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormatInputPattern {
            get {
                return this.FormatInputPatternField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatInputPatternField, value) != true)) {
                    this.FormatInputPatternField = value;
                    this.RaisePropertyChanged("FormatInputPattern");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short FormatTypeId {
            get {
                return this.FormatTypeIdField;
            }
            set {
                if ((this.FormatTypeIdField.Equals(value) != true)) {
                    this.FormatTypeIdField = value;
                    this.RaisePropertyChanged("FormatTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MaxSize {
            get {
                return this.MaxSizeField;
            }
            set {
                if ((this.MaxSizeField.Equals(value) != true)) {
                    this.MaxSizeField = value;
                    this.RaisePropertyChanged("MaxSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MinSize {
            get {
                return this.MinSizeField;
            }
            set {
                if ((this.MinSizeField.Equals(value) != true)) {
                    this.MinSizeField = value;
                    this.RaisePropertyChanged("MinSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short QualifierTypeNumber {
            get {
                return this.QualifierTypeNumberField;
            }
            set {
                if ((this.QualifierTypeNumberField.Equals(value) != true)) {
                    this.QualifierTypeNumberField = value;
                    this.RaisePropertyChanged("QualifierTypeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ValueTypeId {
            get {
                return this.ValueTypeIdField;
            }
            set {
                if ((this.ValueTypeIdField.Equals(value) != true)) {
                    this.ValueTypeIdField = value;
                    this.RaisePropertyChanged("ValueTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InquireInputData", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class InquireInputData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short AdmitInterpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.LineOfBusiness LineOfBusinessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short OutlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.InterpStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short SubCategoryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short AdmitInterp {
            get {
                return this.AdmitInterpField;
            }
            set {
                if ((this.AdmitInterpField.Equals(value) != true)) {
                    this.AdmitInterpField = value;
                    this.RaisePropertyChanged("AdmitInterp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((this.CategoryField.Equals(value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.LineOfBusiness LineOfBusiness {
            get {
                return this.LineOfBusinessField;
            }
            set {
                if ((this.LineOfBusinessField.Equals(value) != true)) {
                    this.LineOfBusinessField = value;
                    this.RaisePropertyChanged("LineOfBusiness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Outline {
            get {
                return this.OutlineField;
            }
            set {
                if ((this.OutlineField.Equals(value) != true)) {
                    this.OutlineField = value;
                    this.RaisePropertyChanged("Outline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.InterpStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short SubCategory {
            get {
                return this.SubCategoryField;
            }
            set {
                if ((this.SubCategoryField.Equals(value) != true)) {
                    this.SubCategoryField = value;
                    this.RaisePropertyChanged("SubCategory");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LevelData", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class LevelData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConfigInterp.Test.Deployed.TestService.LineOfBusiness LineOfBusinessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short OutlineField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConfigInterp.Test.Deployed.TestService.LineOfBusiness LineOfBusiness {
            get {
                return this.LineOfBusinessField;
            }
            set {
                if ((this.LineOfBusinessField.Equals(value) != true)) {
                    this.LineOfBusinessField = value;
                    this.RaisePropertyChanged("LineOfBusiness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Outline {
            get {
                return this.OutlineField;
            }
            set {
                if ((this.OutlineField.Equals(value) != true)) {
                    this.OutlineField = value;
                    this.RaisePropertyChanged("Outline");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutlineData", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class OutlineData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short OutlineField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Outline {
            get {
                return this.OutlineField;
            }
            set {
                if ((this.OutlineField.Equals(value) != true)) {
                    this.OutlineField = value;
                    this.RaisePropertyChanged("Outline");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubCategoryData", Namespace="http://schemas.corelinksolutions.com/product/schema/configinterp")]
    [System.SerializableAttribute()]
    public partial class SubCategoryData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short OutlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short SubCategoryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((this.CategoryField.Equals(value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Outline {
            get {
                return this.OutlineField;
            }
            set {
                if ((this.OutlineField.Equals(value) != true)) {
                    this.OutlineField = value;
                    this.RaisePropertyChanged("Outline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short SubCategory {
            get {
                return this.SubCategoryField;
            }
            set {
                if ((this.SubCategoryField.Equals(value) != true)) {
                    this.SubCategoryField = value;
                    this.RaisePropertyChanged("SubCategory");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", ConfigurationName="TestService.IConfigInterpService")]
    public interface IConfigInterpService {
        
        // CODEGEN: Generating message contract since the wrapper name (CreateInterpRequest) of message CreateInterpRequest does not match the default value (CreateInterpNarrative)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/CreateInterpNarrative", ReplyAction="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/CreateInterpNarrativeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.BusinessFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/CreateInterpNarrativeBusinessFaultFault", Name="BusinessFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ServiceUnavailableFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/CreateInterpNarrativeServiceUnavailableFaultFault", Name="ServiceUnavailableFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UnhandledExceptionFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/CreateInterpNarrativeUnhandledExceptionFaultFault", Name="UnhandledExceptionFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ValidationFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/CreateInterpNarrativeValidationFaultFault", Name="ValidationFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        ConfigInterp.Test.Deployed.TestService.InterpNarrativeResponse CreateInterpNarrative(ConfigInterp.Test.Deployed.TestService.CreateInterpRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (DeleteCipInterpRequest) of message DeleteCipInterpRequest does not match the default value (DeleteInterp)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/DeleteInterp", ReplyAction="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/DeleteInterpResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.BusinessFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/DeleteInterpBusinessFaultFault", Name="BusinessFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ServiceUnavailableFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/DeleteInterpServiceUnavailableFaultFault", Name="ServiceUnavailableFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UnhandledExceptionFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/DeleteInterpUnhandledExceptionFaultFault", Name="UnhandledExceptionFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ValidationFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/DeleteInterpValidationFaultFault", Name="ValidationFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        ConfigInterp.Test.Deployed.TestService.ChangeInterpResultResponse DeleteInterp(ConfigInterp.Test.Deployed.TestService.DeleteCipInterpRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (ListRequest) of message ListRequest does not match the default value (GetActionDescription)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetActionDescription", ReplyAction="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetActionDescriptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.BusinessFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetActionDescriptionBusinessFaultFault", Name="BusinessFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ServiceUnavailableFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetActionDescriptionServiceUnavailableFaultFault", Name="ServiceUnavailableFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UnhandledExceptionFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetActionDescriptionUnhandledExceptionFaultFault", Name="UnhandledExceptionFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ValidationFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetActionDescriptionValidationFaultFault", Name="ValidationFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        ConfigInterp.Test.Deployed.TestService.DescriptionCommonResponse GetActionDescription(ConfigInterp.Test.Deployed.TestService.ListRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (ListRequest) of message ListRequest does not match the default value (GetActionParameterDescriptionValidationInfo)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetActionParameterDescriptionValidationInfo", ReplyAction="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetActionParameterDescriptionValidationInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.BusinessFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetActionParameterDescriptionValidationInfoBusinessFaultFault", Name="BusinessFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ServiceUnavailableFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetActionParameterDescriptionValidationInfoServiceUnavailableFaul" +
            "tFault", Name="ServiceUnavailableFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UnhandledExceptionFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetActionParameterDescriptionValidationInfoUnhandledExceptionFaul" +
            "tFault", Name="UnhandledExceptionFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ValidationFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetActionParameterDescriptionValidationInfoValidationFaultFault", Name="ValidationFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        ConfigInterp.Test.Deployed.TestService.ActionParameterDescriptionValidationInfoResponse GetActionParameterDescriptionValidationInfo(ConfigInterp.Test.Deployed.TestService.ListRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (SystemTypeRequest) of message SystemTypeRequest does not match the default value (GetActionTypeDescription)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetActionTypeDescription", ReplyAction="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetActionTypeDescriptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.BusinessFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetActionTypeDescriptionBusinessFaultFault", Name="BusinessFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ServiceUnavailableFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetActionTypeDescriptionServiceUnavailableFaultFault", Name="ServiceUnavailableFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UnhandledExceptionFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetActionTypeDescriptionUnhandledExceptionFaultFault", Name="UnhandledExceptionFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ValidationFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetActionTypeDescriptionValidationFaultFault", Name="ValidationFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        ConfigInterp.Test.Deployed.TestService.DescriptionCommonResponse GetActionTypeDescription(ConfigInterp.Test.Deployed.TestService.SystemTypeRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (OutlineCategoryListRequest) of message OutlineCategoryListRequest does not match the default value (GetAvailableOutlineCategory)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetAvailableOutlineCategory", ReplyAction="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetAvailableOutlineCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.BusinessFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetAvailableOutlineCategoryBusinessFaultFault", Name="BusinessFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ServiceUnavailableFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetAvailableOutlineCategoryServiceUnavailableFaultFault", Name="ServiceUnavailableFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UnhandledExceptionFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetAvailableOutlineCategoryUnhandledExceptionFaultFault", Name="UnhandledExceptionFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ValidationFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetAvailableOutlineCategoryValidationFaultFault", Name="ValidationFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        ConfigInterp.Test.Deployed.TestService.AvailableOutlineCategoryResponse GetAvailableOutlineCategory(ConfigInterp.Test.Deployed.TestService.OutlineCategoryListRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (CategoryRequest) of message CategoryRequest does not match the default value (GetCategoryDescription)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetCategoryDescription", ReplyAction="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetCategoryDescriptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.BusinessFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetCategoryDescriptionBusinessFaultFault", Name="BusinessFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ServiceUnavailableFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetCategoryDescriptionServiceUnavailableFaultFault", Name="ServiceUnavailableFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UnhandledExceptionFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetCategoryDescriptionUnhandledExceptionFaultFault", Name="UnhandledExceptionFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ValidationFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetCategoryDescriptionValidationFaultFault", Name="ValidationFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        ConfigInterp.Test.Deployed.TestService.DescriptionResponse GetCategoryDescription(ConfigInterp.Test.Deployed.TestService.CategoryRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (ListRequest) of message ListRequest does not match the default value (GetCompareTypeDescription)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetCompareTypeDescription", ReplyAction="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetCompareTypeDescriptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.BusinessFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetCompareTypeDescriptionBusinessFaultFault", Name="BusinessFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ServiceUnavailableFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetCompareTypeDescriptionServiceUnavailableFaultFault", Name="ServiceUnavailableFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UnhandledExceptionFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetCompareTypeDescriptionUnhandledExceptionFaultFault", Name="UnhandledExceptionFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ValidationFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetCompareTypeDescriptionValidationFaultFault", Name="ValidationFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        ConfigInterp.Test.Deployed.TestService.DescriptionCommonResponse GetCompareTypeDescription(ConfigInterp.Test.Deployed.TestService.ListRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (DefaultRequest) of message DefaultRequest does not match the default value (GetConditionTypeDescription)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetConditionTypeDescription", ReplyAction="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetConditionTypeDescriptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.BusinessFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetConditionTypeDescriptionBusinessFaultFault", Name="BusinessFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ServiceUnavailableFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetConditionTypeDescriptionServiceUnavailableFaultFault", Name="ServiceUnavailableFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UnhandledExceptionFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetConditionTypeDescriptionUnhandledExceptionFaultFault", Name="UnhandledExceptionFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ValidationFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetConditionTypeDescriptionValidationFaultFault", Name="ValidationFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        ConfigInterp.Test.Deployed.TestService.DescriptionCommonResponse GetConditionTypeDescription(ConfigInterp.Test.Deployed.TestService.DefaultRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (SystemTypeRequest) of message SystemTypeRequest does not match the default value (GetExceptionDescription)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetExceptionDescription", ReplyAction="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetExceptionDescriptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.BusinessFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetExceptionDescriptionBusinessFaultFault", Name="BusinessFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ServiceUnavailableFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetExceptionDescriptionServiceUnavailableFaultFault", Name="ServiceUnavailableFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UnhandledExceptionFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetExceptionDescriptionUnhandledExceptionFaultFault", Name="UnhandledExceptionFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ValidationFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetExceptionDescriptionValidationFaultFault", Name="ValidationFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        ConfigInterp.Test.Deployed.TestService.DescriptionCommonResponse GetExceptionDescription(ConfigInterp.Test.Deployed.TestService.SystemTypeRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (ListRequest) of message ListRequest does not match the default value (GetFieldNameDescription)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetFieldNameDescription", ReplyAction="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetFieldNameDescriptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.BusinessFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetFieldNameDescriptionBusinessFaultFault", Name="BusinessFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ServiceUnavailableFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetFieldNameDescriptionServiceUnavailableFaultFault", Name="ServiceUnavailableFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UnhandledExceptionFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetFieldNameDescriptionUnhandledExceptionFaultFault", Name="UnhandledExceptionFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ValidationFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetFieldNameDescriptionValidationFaultFault", Name="ValidationFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        ConfigInterp.Test.Deployed.TestService.FieldNameResponse GetFieldNameDescription(ConfigInterp.Test.Deployed.TestService.ListRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (SystemTypeRequest) of message SystemTypeRequest does not match the default value (GetFieldTypeDescription)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetFieldTypeDescription", ReplyAction="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetFieldTypeDescriptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.BusinessFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetFieldTypeDescriptionBusinessFaultFault", Name="BusinessFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ServiceUnavailableFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetFieldTypeDescriptionServiceUnavailableFaultFault", Name="ServiceUnavailableFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UnhandledExceptionFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetFieldTypeDescriptionUnhandledExceptionFaultFault", Name="UnhandledExceptionFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ValidationFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetFieldTypeDescriptionValidationFaultFault", Name="ValidationFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        ConfigInterp.Test.Deployed.TestService.DescriptionCommonResponse GetFieldTypeDescription(ConfigInterp.Test.Deployed.TestService.SystemTypeRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (FieldValidationInfoRequest) of message FieldValidationInfoRequest does not match the default value (GetFieldValidationInfo)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetFieldValidationInfo", ReplyAction="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetFieldValidationInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.BusinessFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetFieldValidationInfoBusinessFaultFault", Name="BusinessFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ServiceUnavailableFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetFieldValidationInfoServiceUnavailableFaultFault", Name="ServiceUnavailableFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UnhandledExceptionFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetFieldValidationInfoUnhandledExceptionFaultFault", Name="UnhandledExceptionFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ValidationFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetFieldValidationInfoValidationFaultFault", Name="ValidationFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        ConfigInterp.Test.Deployed.TestService.FieldValidationInfoResponse GetFieldValidationInfo(ConfigInterp.Test.Deployed.TestService.FieldValidationInfoRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (InquireRequest) of message InquireRequest does not match the default value (GetInterp)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetInterp", ReplyAction="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetInterpResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.BusinessFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetInterpBusinessFaultFault", Name="BusinessFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ServiceUnavailableFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetInterpServiceUnavailableFaultFault", Name="ServiceUnavailableFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UnhandledExceptionFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetInterpUnhandledExceptionFaultFault", Name="UnhandledExceptionFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ValidationFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetInterpValidationFaultFault", Name="ValidationFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        ConfigInterp.Test.Deployed.TestService.SimpleInterpResponse GetInterp(ConfigInterp.Test.Deployed.TestService.InquireRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (InquireRequest) of message InquireRequest does not match the default value (GetInterpDetail)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetInterpDetail", ReplyAction="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetInterpDetailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.BusinessFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetInterpDetailBusinessFaultFault", Name="BusinessFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ServiceUnavailableFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetInterpDetailServiceUnavailableFaultFault", Name="ServiceUnavailableFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UnhandledExceptionFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetInterpDetailUnhandledExceptionFaultFault", Name="UnhandledExceptionFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ValidationFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetInterpDetailValidationFaultFault", Name="ValidationFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        ConfigInterp.Test.Deployed.TestService.DetailedInterpResponse GetInterpDetail(ConfigInterp.Test.Deployed.TestService.InquireRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (LevelRequest) of message LevelRequest does not match the default value (GetLevelDescription)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetLevelDescription", ReplyAction="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetLevelDescriptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.BusinessFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetLevelDescriptionBusinessFaultFault", Name="BusinessFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ServiceUnavailableFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetLevelDescriptionServiceUnavailableFaultFault", Name="ServiceUnavailableFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UnhandledExceptionFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetLevelDescriptionUnhandledExceptionFaultFault", Name="UnhandledExceptionFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ValidationFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetLevelDescriptionValidationFaultFault", Name="ValidationFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        ConfigInterp.Test.Deployed.TestService.DescriptionResponse GetLevelDescription(ConfigInterp.Test.Deployed.TestService.LevelRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (OutlineRequest) of message OutlineRequest does not match the default value (GetOutlineDescription)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetOutlineDescription", ReplyAction="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetOutlineDescriptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.BusinessFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetOutlineDescriptionBusinessFaultFault", Name="BusinessFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ServiceUnavailableFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetOutlineDescriptionServiceUnavailableFaultFault", Name="ServiceUnavailableFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UnhandledExceptionFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetOutlineDescriptionUnhandledExceptionFaultFault", Name="UnhandledExceptionFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ValidationFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetOutlineDescriptionValidationFaultFault", Name="ValidationFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        ConfigInterp.Test.Deployed.TestService.DescriptionResponse GetOutlineDescription(ConfigInterp.Test.Deployed.TestService.OutlineRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (SubCategoryRequest) of message SubCategoryRequest does not match the default value (GetSubCategoryDescription)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetSubCategoryDescription", ReplyAction="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetSubCategoryDescriptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.BusinessFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetSubCategoryDescriptionBusinessFaultFault", Name="BusinessFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ServiceUnavailableFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetSubCategoryDescriptionServiceUnavailableFaultFault", Name="ServiceUnavailableFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UnhandledExceptionFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetSubCategoryDescriptionUnhandledExceptionFaultFault", Name="UnhandledExceptionFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ValidationFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/GetSubCategoryDescriptionValidationFaultFault", Name="ValidationFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        ConfigInterp.Test.Deployed.TestService.DescriptionResponse GetSubCategoryDescription(ConfigInterp.Test.Deployed.TestService.SubCategoryRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (InquireInterpRequest) of message InquireInterpRequest does not match the default value (InquireInterpNarrative)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/InquireInterpNarrative", ReplyAction="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/InquireInterpNarrativeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.BusinessFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/InquireInterpNarrativeBusinessFaultFault", Name="BusinessFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ServiceUnavailableFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/InquireInterpNarrativeServiceUnavailableFaultFault", Name="ServiceUnavailableFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UnhandledExceptionFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/InquireInterpNarrativeUnhandledExceptionFaultFault", Name="UnhandledExceptionFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ValidationFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/InquireInterpNarrativeValidationFaultFault", Name="ValidationFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        ConfigInterp.Test.Deployed.TestService.InquireInterpResponse InquireInterpNarrative(ConfigInterp.Test.Deployed.TestService.InquireInterpRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (UpdateInterpDetailRequest) of message UpdateInterpDetailRequest does not match the default value (UpdateInterpConfig)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/UpdateInterpConfig", ReplyAction="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/UpdateInterpConfigResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.BusinessFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/UpdateInterpConfigBusinessFaultFault", Name="BusinessFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ServiceUnavailableFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/UpdateInterpConfigServiceUnavailableFaultFault", Name="ServiceUnavailableFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UnhandledExceptionFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/UpdateInterpConfigUnhandledExceptionFaultFault", Name="UnhandledExceptionFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ValidationFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/UpdateInterpConfigValidationFaultFault", Name="ValidationFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        ConfigInterp.Test.Deployed.TestService.ChangeInterpResultResponse UpdateInterpConfig(ConfigInterp.Test.Deployed.TestService.UpdateInterpDetailRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (UpdateInterpRequest) of message UpdateInterpRequest does not match the default value (UpdateInterpNarrative)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/UpdateInterpNarrative", ReplyAction="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/UpdateInterpNarrativeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.BusinessFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/UpdateInterpNarrativeBusinessFaultFault", Name="BusinessFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ServiceUnavailableFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/UpdateInterpNarrativeServiceUnavailableFaultFault", Name="ServiceUnavailableFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UnhandledExceptionFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/UpdateInterpNarrativeUnhandledExceptionFaultFault", Name="UnhandledExceptionFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ValidationFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/UpdateInterpNarrativeValidationFaultFault", Name="ValidationFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        ConfigInterp.Test.Deployed.TestService.InterpNarrativeResponse UpdateInterpNarrative(ConfigInterp.Test.Deployed.TestService.UpdateInterpRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (StatusChangeRequest) of message StatusChangeRequest does not match the default value (UpdateInterpStatus)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/UpdateInterpStatus", ReplyAction="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/UpdateInterpStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.BusinessFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/UpdateInterpStatusBusinessFaultFault", Name="BusinessFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ServiceUnavailableFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/UpdateInterpStatusServiceUnavailableFaultFault", Name="ServiceUnavailableFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.UnhandledExceptionFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/UpdateInterpStatusUnhandledExceptionFaultFault", Name="UnhandledExceptionFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConfigInterp.Test.Deployed.TestService.ValidationFault), Action="http://schemas.corelinksolutions.com/product/contract/configinterp/service/IConfi" +
            "gInterpService/UpdateInterpStatusValidationFaultFault", Name="ValidationFault", Namespace="http://schemas.corelinksolutions.com/infrastructure/schema/coremessages/v1")]
        ConfigInterp.Test.Deployed.TestService.ChangeInterpResultResponse UpdateInterpStatus(ConfigInterp.Test.Deployed.TestService.StatusChangeRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateInterpRequest", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class CreateInterpRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string ApplicationId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string CorrespondenceLocation;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public int Region;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UnisysUsercode;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UserId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public ConfigInterp.Test.Deployed.TestService.CreateInterpNarrativeData Data;
        
        public CreateInterpRequest() {
        }
        
        public CreateInterpRequest(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.CreateInterpNarrativeData Data) {
            this.ApplicationId = ApplicationId;
            this.CorrespondenceLocation = CorrespondenceLocation;
            this.Region = Region;
            this.UnisysUsercode = UnisysUsercode;
            this.UserId = UserId;
            this.Data = Data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InterpNarrativeResponse", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class InterpNarrativeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=1)]
        public ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=2)]
        public ConfigInterp.Test.Deployed.TestService.ResponseStatus Status;
        
        public InterpNarrativeResponse() {
        }
        
        public InterpNarrativeResponse(ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            this.Errors = Errors;
            this.FailureReason = FailureReason;
            this.Status = Status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteCipInterpRequest", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class DeleteCipInterpRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string ApplicationId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string CorrespondenceLocation;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public int Region;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UnisysUsercode;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UserId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public ConfigInterp.Test.Deployed.TestService.DeleteCipInterpData Data;
        
        public DeleteCipInterpRequest() {
        }
        
        public DeleteCipInterpRequest(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.DeleteCipInterpData Data) {
            this.ApplicationId = ApplicationId;
            this.CorrespondenceLocation = CorrespondenceLocation;
            this.Region = Region;
            this.UnisysUsercode = UnisysUsercode;
            this.UserId = UserId;
            this.Data = Data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeInterpResultResponse", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class ChangeInterpResultResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=1)]
        public ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=2)]
        public ConfigInterp.Test.Deployed.TestService.ResponseStatus Status;
        
        public ChangeInterpResultResponse() {
        }
        
        public ChangeInterpResultResponse(ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            this.Errors = Errors;
            this.FailureReason = FailureReason;
            this.Status = Status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListRequest", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class ListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string ApplicationId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string CorrespondenceLocation;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public int Region;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UnisysUsercode;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UserId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public int Id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=1)]
        public ConfigInterp.Test.Deployed.TestService.LineOfBusiness LineOfBusiness;
        
        public ListRequest() {
        }
        
        public ListRequest(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, int Id, ConfigInterp.Test.Deployed.TestService.LineOfBusiness LineOfBusiness) {
            this.ApplicationId = ApplicationId;
            this.CorrespondenceLocation = CorrespondenceLocation;
            this.Region = Region;
            this.UnisysUsercode = UnisysUsercode;
            this.UserId = UserId;
            this.Id = Id;
            this.LineOfBusiness = LineOfBusiness;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DescriptionCommonResponse", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class DescriptionCommonResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public ConfigInterp.Test.Deployed.TestService.DescriptionCommon[] Descriptions;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=1)]
        public ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=2)]
        public ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=3)]
        public ConfigInterp.Test.Deployed.TestService.ResponseStatus Status;
        
        public DescriptionCommonResponse() {
        }
        
        public DescriptionCommonResponse(ConfigInterp.Test.Deployed.TestService.DescriptionCommon[] Descriptions, ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            this.Descriptions = Descriptions;
            this.Errors = Errors;
            this.FailureReason = FailureReason;
            this.Status = Status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ActionParameterDescriptionValidationInfoResponse", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class ActionParameterDescriptionValidationInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public ConfigInterp.Test.Deployed.TestService.ActionParameterDescriptionValidationInfoData[] Data;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=1)]
        public ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=2)]
        public ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=3)]
        public ConfigInterp.Test.Deployed.TestService.ResponseStatus Status;
        
        public ActionParameterDescriptionValidationInfoResponse() {
        }
        
        public ActionParameterDescriptionValidationInfoResponse(ConfigInterp.Test.Deployed.TestService.ActionParameterDescriptionValidationInfoData[] Data, ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            this.Data = Data;
            this.Errors = Errors;
            this.FailureReason = FailureReason;
            this.Status = Status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SystemTypeRequest", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class SystemTypeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string ApplicationId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string CorrespondenceLocation;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public int Region;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UnisysUsercode;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UserId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public ConfigInterp.Test.Deployed.TestService.LineOfBusiness LineOfBusiness;
        
        public SystemTypeRequest() {
        }
        
        public SystemTypeRequest(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.LineOfBusiness LineOfBusiness) {
            this.ApplicationId = ApplicationId;
            this.CorrespondenceLocation = CorrespondenceLocation;
            this.Region = Region;
            this.UnisysUsercode = UnisysUsercode;
            this.UserId = UserId;
            this.LineOfBusiness = LineOfBusiness;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OutlineCategoryListRequest", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class OutlineCategoryListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string ApplicationId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string CorrespondenceLocation;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public int Region;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UnisysUsercode;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UserId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public int CategoryId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=1)]
        public ConfigInterp.Test.Deployed.TestService.LineOfBusiness LineOfBusiness;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=2)]
        public int OutlineId;
        
        public OutlineCategoryListRequest() {
        }
        
        public OutlineCategoryListRequest(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, int CategoryId, ConfigInterp.Test.Deployed.TestService.LineOfBusiness LineOfBusiness, int OutlineId) {
            this.ApplicationId = ApplicationId;
            this.CorrespondenceLocation = CorrespondenceLocation;
            this.Region = Region;
            this.UnisysUsercode = UnisysUsercode;
            this.UserId = UserId;
            this.CategoryId = CategoryId;
            this.LineOfBusiness = LineOfBusiness;
            this.OutlineId = OutlineId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AvailableOutlineCategoryResponse", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class AvailableOutlineCategoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public ConfigInterp.Test.Deployed.TestService.AvailableOutlineCategoryData[] Data;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=1)]
        public ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=2)]
        public ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=3)]
        public ConfigInterp.Test.Deployed.TestService.ResponseStatus Status;
        
        public AvailableOutlineCategoryResponse() {
        }
        
        public AvailableOutlineCategoryResponse(ConfigInterp.Test.Deployed.TestService.AvailableOutlineCategoryData[] Data, ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            this.Data = Data;
            this.Errors = Errors;
            this.FailureReason = FailureReason;
            this.Status = Status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CategoryRequest", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class CategoryRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string ApplicationId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string CorrespondenceLocation;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public int Region;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UnisysUsercode;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UserId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public ConfigInterp.Test.Deployed.TestService.CategoryData Data;
        
        public CategoryRequest() {
        }
        
        public CategoryRequest(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.CategoryData Data) {
            this.ApplicationId = ApplicationId;
            this.CorrespondenceLocation = CorrespondenceLocation;
            this.Region = Region;
            this.UnisysUsercode = UnisysUsercode;
            this.UserId = UserId;
            this.Data = Data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DescriptionResponse", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class DescriptionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public string Description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=1)]
        public ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=2)]
        public ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=3)]
        public ConfigInterp.Test.Deployed.TestService.ResponseStatus Status;
        
        public DescriptionResponse() {
        }
        
        public DescriptionResponse(string Description, ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            this.Description = Description;
            this.Errors = Errors;
            this.FailureReason = FailureReason;
            this.Status = Status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DefaultRequest", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class DefaultRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string ApplicationId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string CorrespondenceLocation;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public int Region;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UnisysUsercode;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UserId;
        
        public DefaultRequest() {
        }
        
        public DefaultRequest(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId) {
            this.ApplicationId = ApplicationId;
            this.CorrespondenceLocation = CorrespondenceLocation;
            this.Region = Region;
            this.UnisysUsercode = UnisysUsercode;
            this.UserId = UserId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FieldNameResponse", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class FieldNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public ConfigInterp.Test.Deployed.TestService.FieldNameData[] Descriptions;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=1)]
        public ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=2)]
        public ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=3)]
        public ConfigInterp.Test.Deployed.TestService.ResponseStatus Status;
        
        public FieldNameResponse() {
        }
        
        public FieldNameResponse(ConfigInterp.Test.Deployed.TestService.FieldNameData[] Descriptions, ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            this.Descriptions = Descriptions;
            this.Errors = Errors;
            this.FailureReason = FailureReason;
            this.Status = Status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FieldValidationInfoRequest", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class FieldValidationInfoRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string ApplicationId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string CorrespondenceLocation;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public int Region;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UnisysUsercode;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UserId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public int FieldId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=1)]
        public ConfigInterp.Test.Deployed.TestService.LineOfBusiness LineOfBusiness;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=2)]
        public int TypeId;
        
        public FieldValidationInfoRequest() {
        }
        
        public FieldValidationInfoRequest(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, int FieldId, ConfigInterp.Test.Deployed.TestService.LineOfBusiness LineOfBusiness, int TypeId) {
            this.ApplicationId = ApplicationId;
            this.CorrespondenceLocation = CorrespondenceLocation;
            this.Region = Region;
            this.UnisysUsercode = UnisysUsercode;
            this.UserId = UserId;
            this.FieldId = FieldId;
            this.LineOfBusiness = LineOfBusiness;
            this.TypeId = TypeId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FieldValidationInfoResponse", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class FieldValidationInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public ConfigInterp.Test.Deployed.TestService.FieldValidationInfoData[] Data;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=1)]
        public ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=2)]
        public ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=3)]
        public ConfigInterp.Test.Deployed.TestService.ResponseStatus Status;
        
        public FieldValidationInfoResponse() {
        }
        
        public FieldValidationInfoResponse(ConfigInterp.Test.Deployed.TestService.FieldValidationInfoData[] Data, ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            this.Data = Data;
            this.Errors = Errors;
            this.FailureReason = FailureReason;
            this.Status = Status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InquireRequest", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class InquireRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string ApplicationId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string CorrespondenceLocation;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public int Region;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UnisysUsercode;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UserId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public ConfigInterp.Test.Deployed.TestService.InquireInputData Data;
        
        public InquireRequest() {
        }
        
        public InquireRequest(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.InquireInputData Data) {
            this.ApplicationId = ApplicationId;
            this.CorrespondenceLocation = CorrespondenceLocation;
            this.Region = Region;
            this.UnisysUsercode = UnisysUsercode;
            this.UserId = UserId;
            this.Data = Data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SimpleInterpResponse", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class SimpleInterpResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public ConfigInterp.Test.Deployed.TestService.InquireSimpleOutputData Data;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=1)]
        public ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=2)]
        public ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=3)]
        public ConfigInterp.Test.Deployed.TestService.ResponseStatus Status;
        
        public SimpleInterpResponse() {
        }
        
        public SimpleInterpResponse(ConfigInterp.Test.Deployed.TestService.InquireSimpleOutputData Data, ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            this.Data = Data;
            this.Errors = Errors;
            this.FailureReason = FailureReason;
            this.Status = Status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DetailedInterpResponse", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class DetailedInterpResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public ConfigInterp.Test.Deployed.TestService.InterpDetailOutData Data;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=1)]
        public ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=2)]
        public ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=3)]
        public ConfigInterp.Test.Deployed.TestService.ResponseStatus Status;
        
        public DetailedInterpResponse() {
        }
        
        public DetailedInterpResponse(ConfigInterp.Test.Deployed.TestService.InterpDetailOutData Data, ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            this.Data = Data;
            this.Errors = Errors;
            this.FailureReason = FailureReason;
            this.Status = Status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LevelRequest", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class LevelRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string ApplicationId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string CorrespondenceLocation;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public int Region;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UnisysUsercode;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UserId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public ConfigInterp.Test.Deployed.TestService.LevelData Data;
        
        public LevelRequest() {
        }
        
        public LevelRequest(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.LevelData Data) {
            this.ApplicationId = ApplicationId;
            this.CorrespondenceLocation = CorrespondenceLocation;
            this.Region = Region;
            this.UnisysUsercode = UnisysUsercode;
            this.UserId = UserId;
            this.Data = Data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OutlineRequest", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class OutlineRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string ApplicationId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string CorrespondenceLocation;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public int Region;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UnisysUsercode;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UserId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public ConfigInterp.Test.Deployed.TestService.OutlineData Data;
        
        public OutlineRequest() {
        }
        
        public OutlineRequest(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.OutlineData Data) {
            this.ApplicationId = ApplicationId;
            this.CorrespondenceLocation = CorrespondenceLocation;
            this.Region = Region;
            this.UnisysUsercode = UnisysUsercode;
            this.UserId = UserId;
            this.Data = Data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubCategoryRequest", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class SubCategoryRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string ApplicationId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string CorrespondenceLocation;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public int Region;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UnisysUsercode;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UserId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public ConfigInterp.Test.Deployed.TestService.SubCategoryData Data;
        
        public SubCategoryRequest() {
        }
        
        public SubCategoryRequest(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.SubCategoryData Data) {
            this.ApplicationId = ApplicationId;
            this.CorrespondenceLocation = CorrespondenceLocation;
            this.Region = Region;
            this.UnisysUsercode = UnisysUsercode;
            this.UserId = UserId;
            this.Data = Data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InquireInterpRequest", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class InquireInterpRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string ApplicationId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string CorrespondenceLocation;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public int Region;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UnisysUsercode;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UserId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public ConfigInterp.Test.Deployed.TestService.InquireInterpNarrativeData Data;
        
        public InquireInterpRequest() {
        }
        
        public InquireInterpRequest(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.InquireInterpNarrativeData Data) {
            this.ApplicationId = ApplicationId;
            this.CorrespondenceLocation = CorrespondenceLocation;
            this.Region = Region;
            this.UnisysUsercode = UnisysUsercode;
            this.UserId = UserId;
            this.Data = Data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InquireInterpResponse", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class InquireInterpResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public ConfigInterp.Test.Deployed.TestService.InquireNarrativeOutputData Data;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=1)]
        public ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=2)]
        public ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=3)]
        public ConfigInterp.Test.Deployed.TestService.ResponseStatus Status;
        
        public InquireInterpResponse() {
        }
        
        public InquireInterpResponse(ConfigInterp.Test.Deployed.TestService.InquireNarrativeOutputData Data, ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            this.Data = Data;
            this.Errors = Errors;
            this.FailureReason = FailureReason;
            this.Status = Status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateInterpDetailRequest", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class UpdateInterpDetailRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string ApplicationId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string CorrespondenceLocation;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public int Region;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UnisysUsercode;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UserId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public ConfigInterp.Test.Deployed.TestService.InterpDetailData Data;
        
        public UpdateInterpDetailRequest() {
        }
        
        public UpdateInterpDetailRequest(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.InterpDetailData Data) {
            this.ApplicationId = ApplicationId;
            this.CorrespondenceLocation = CorrespondenceLocation;
            this.Region = Region;
            this.UnisysUsercode = UnisysUsercode;
            this.UserId = UserId;
            this.Data = Data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateInterpRequest", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class UpdateInterpRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string ApplicationId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string CorrespondenceLocation;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public int Region;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UnisysUsercode;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UserId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public ConfigInterp.Test.Deployed.TestService.UpdateInterpNarrativeData Data;
        
        public UpdateInterpRequest() {
        }
        
        public UpdateInterpRequest(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.UpdateInterpNarrativeData Data) {
            this.ApplicationId = ApplicationId;
            this.CorrespondenceLocation = CorrespondenceLocation;
            this.Region = Region;
            this.UnisysUsercode = UnisysUsercode;
            this.UserId = UserId;
            this.Data = Data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StatusChangeRequest", WrapperNamespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", IsWrapped=true)]
    public partial class StatusChangeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string ApplicationId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string CorrespondenceLocation;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public int Region;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UnisysUsercode;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://corelink.com/v1.0.0/profiletransport")]
        public string UserId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.corelinksolutions.com/product/contract/configinterp/service", Order=0)]
        public ConfigInterp.Test.Deployed.TestService.StatusData Data;
        
        public StatusChangeRequest() {
        }
        
        public StatusChangeRequest(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.StatusData Data) {
            this.ApplicationId = ApplicationId;
            this.CorrespondenceLocation = CorrespondenceLocation;
            this.Region = Region;
            this.UnisysUsercode = UnisysUsercode;
            this.UserId = UserId;
            this.Data = Data;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConfigInterpServiceChannel : ConfigInterp.Test.Deployed.TestService.IConfigInterpService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConfigInterpServiceClient : System.ServiceModel.ClientBase<ConfigInterp.Test.Deployed.TestService.IConfigInterpService>, ConfigInterp.Test.Deployed.TestService.IConfigInterpService {
        
        public ConfigInterpServiceClient() {
        }
        
        public ConfigInterpServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConfigInterpServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConfigInterpServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConfigInterpServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConfigInterp.Test.Deployed.TestService.InterpNarrativeResponse ConfigInterp.Test.Deployed.TestService.IConfigInterpService.CreateInterpNarrative(ConfigInterp.Test.Deployed.TestService.CreateInterpRequest request) {
            return base.Channel.CreateInterpNarrative(request);
        }
        
        public ConfigInterp.Test.Deployed.TestService.ErrorItem[] CreateInterpNarrative(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.CreateInterpNarrativeData Data, out ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, out ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            ConfigInterp.Test.Deployed.TestService.CreateInterpRequest inValue = new ConfigInterp.Test.Deployed.TestService.CreateInterpRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.CorrespondenceLocation = CorrespondenceLocation;
            inValue.Region = Region;
            inValue.UnisysUsercode = UnisysUsercode;
            inValue.UserId = UserId;
            inValue.Data = Data;
            ConfigInterp.Test.Deployed.TestService.InterpNarrativeResponse retVal = ((ConfigInterp.Test.Deployed.TestService.IConfigInterpService)(this)).CreateInterpNarrative(inValue);
            FailureReason = retVal.FailureReason;
            Status = retVal.Status;
            return retVal.Errors;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConfigInterp.Test.Deployed.TestService.ChangeInterpResultResponse ConfigInterp.Test.Deployed.TestService.IConfigInterpService.DeleteInterp(ConfigInterp.Test.Deployed.TestService.DeleteCipInterpRequest request) {
            return base.Channel.DeleteInterp(request);
        }
        
        public ConfigInterp.Test.Deployed.TestService.ErrorItem[] DeleteInterp(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.DeleteCipInterpData Data, out ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, out ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            ConfigInterp.Test.Deployed.TestService.DeleteCipInterpRequest inValue = new ConfigInterp.Test.Deployed.TestService.DeleteCipInterpRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.CorrespondenceLocation = CorrespondenceLocation;
            inValue.Region = Region;
            inValue.UnisysUsercode = UnisysUsercode;
            inValue.UserId = UserId;
            inValue.Data = Data;
            ConfigInterp.Test.Deployed.TestService.ChangeInterpResultResponse retVal = ((ConfigInterp.Test.Deployed.TestService.IConfigInterpService)(this)).DeleteInterp(inValue);
            FailureReason = retVal.FailureReason;
            Status = retVal.Status;
            return retVal.Errors;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConfigInterp.Test.Deployed.TestService.DescriptionCommonResponse ConfigInterp.Test.Deployed.TestService.IConfigInterpService.GetActionDescription(ConfigInterp.Test.Deployed.TestService.ListRequest request) {
            return base.Channel.GetActionDescription(request);
        }
        
        public ConfigInterp.Test.Deployed.TestService.DescriptionCommon[] GetActionDescription(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, int Id, ConfigInterp.Test.Deployed.TestService.LineOfBusiness LineOfBusiness, out ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, out ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, out ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            ConfigInterp.Test.Deployed.TestService.ListRequest inValue = new ConfigInterp.Test.Deployed.TestService.ListRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.CorrespondenceLocation = CorrespondenceLocation;
            inValue.Region = Region;
            inValue.UnisysUsercode = UnisysUsercode;
            inValue.UserId = UserId;
            inValue.Id = Id;
            inValue.LineOfBusiness = LineOfBusiness;
            ConfigInterp.Test.Deployed.TestService.DescriptionCommonResponse retVal = ((ConfigInterp.Test.Deployed.TestService.IConfigInterpService)(this)).GetActionDescription(inValue);
            Errors = retVal.Errors;
            FailureReason = retVal.FailureReason;
            Status = retVal.Status;
            return retVal.Descriptions;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConfigInterp.Test.Deployed.TestService.ActionParameterDescriptionValidationInfoResponse ConfigInterp.Test.Deployed.TestService.IConfigInterpService.GetActionParameterDescriptionValidationInfo(ConfigInterp.Test.Deployed.TestService.ListRequest request) {
            return base.Channel.GetActionParameterDescriptionValidationInfo(request);
        }
        
        public ConfigInterp.Test.Deployed.TestService.ActionParameterDescriptionValidationInfoData[] GetActionParameterDescriptionValidationInfo(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, int Id, ConfigInterp.Test.Deployed.TestService.LineOfBusiness LineOfBusiness, out ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, out ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, out ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            ConfigInterp.Test.Deployed.TestService.ListRequest inValue = new ConfigInterp.Test.Deployed.TestService.ListRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.CorrespondenceLocation = CorrespondenceLocation;
            inValue.Region = Region;
            inValue.UnisysUsercode = UnisysUsercode;
            inValue.UserId = UserId;
            inValue.Id = Id;
            inValue.LineOfBusiness = LineOfBusiness;
            ConfigInterp.Test.Deployed.TestService.ActionParameterDescriptionValidationInfoResponse retVal = ((ConfigInterp.Test.Deployed.TestService.IConfigInterpService)(this)).GetActionParameterDescriptionValidationInfo(inValue);
            Errors = retVal.Errors;
            FailureReason = retVal.FailureReason;
            Status = retVal.Status;
            return retVal.Data;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConfigInterp.Test.Deployed.TestService.DescriptionCommonResponse ConfigInterp.Test.Deployed.TestService.IConfigInterpService.GetActionTypeDescription(ConfigInterp.Test.Deployed.TestService.SystemTypeRequest request) {
            return base.Channel.GetActionTypeDescription(request);
        }
        
        public ConfigInterp.Test.Deployed.TestService.DescriptionCommon[] GetActionTypeDescription(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.LineOfBusiness LineOfBusiness, out ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, out ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, out ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            ConfigInterp.Test.Deployed.TestService.SystemTypeRequest inValue = new ConfigInterp.Test.Deployed.TestService.SystemTypeRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.CorrespondenceLocation = CorrespondenceLocation;
            inValue.Region = Region;
            inValue.UnisysUsercode = UnisysUsercode;
            inValue.UserId = UserId;
            inValue.LineOfBusiness = LineOfBusiness;
            ConfigInterp.Test.Deployed.TestService.DescriptionCommonResponse retVal = ((ConfigInterp.Test.Deployed.TestService.IConfigInterpService)(this)).GetActionTypeDescription(inValue);
            Errors = retVal.Errors;
            FailureReason = retVal.FailureReason;
            Status = retVal.Status;
            return retVal.Descriptions;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConfigInterp.Test.Deployed.TestService.AvailableOutlineCategoryResponse ConfigInterp.Test.Deployed.TestService.IConfigInterpService.GetAvailableOutlineCategory(ConfigInterp.Test.Deployed.TestService.OutlineCategoryListRequest request) {
            return base.Channel.GetAvailableOutlineCategory(request);
        }
        
        public ConfigInterp.Test.Deployed.TestService.AvailableOutlineCategoryData[] GetAvailableOutlineCategory(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, int CategoryId, ConfigInterp.Test.Deployed.TestService.LineOfBusiness LineOfBusiness, int OutlineId, out ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, out ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, out ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            ConfigInterp.Test.Deployed.TestService.OutlineCategoryListRequest inValue = new ConfigInterp.Test.Deployed.TestService.OutlineCategoryListRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.CorrespondenceLocation = CorrespondenceLocation;
            inValue.Region = Region;
            inValue.UnisysUsercode = UnisysUsercode;
            inValue.UserId = UserId;
            inValue.CategoryId = CategoryId;
            inValue.LineOfBusiness = LineOfBusiness;
            inValue.OutlineId = OutlineId;
            ConfigInterp.Test.Deployed.TestService.AvailableOutlineCategoryResponse retVal = ((ConfigInterp.Test.Deployed.TestService.IConfigInterpService)(this)).GetAvailableOutlineCategory(inValue);
            Errors = retVal.Errors;
            FailureReason = retVal.FailureReason;
            Status = retVal.Status;
            return retVal.Data;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConfigInterp.Test.Deployed.TestService.DescriptionResponse ConfigInterp.Test.Deployed.TestService.IConfigInterpService.GetCategoryDescription(ConfigInterp.Test.Deployed.TestService.CategoryRequest request) {
            return base.Channel.GetCategoryDescription(request);
        }
        
        public string GetCategoryDescription(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.CategoryData Data, out ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, out ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, out ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            ConfigInterp.Test.Deployed.TestService.CategoryRequest inValue = new ConfigInterp.Test.Deployed.TestService.CategoryRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.CorrespondenceLocation = CorrespondenceLocation;
            inValue.Region = Region;
            inValue.UnisysUsercode = UnisysUsercode;
            inValue.UserId = UserId;
            inValue.Data = Data;
            ConfigInterp.Test.Deployed.TestService.DescriptionResponse retVal = ((ConfigInterp.Test.Deployed.TestService.IConfigInterpService)(this)).GetCategoryDescription(inValue);
            Errors = retVal.Errors;
            FailureReason = retVal.FailureReason;
            Status = retVal.Status;
            return retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConfigInterp.Test.Deployed.TestService.DescriptionCommonResponse ConfigInterp.Test.Deployed.TestService.IConfigInterpService.GetCompareTypeDescription(ConfigInterp.Test.Deployed.TestService.ListRequest request) {
            return base.Channel.GetCompareTypeDescription(request);
        }
        
        public ConfigInterp.Test.Deployed.TestService.DescriptionCommon[] GetCompareTypeDescription(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, int Id, ConfigInterp.Test.Deployed.TestService.LineOfBusiness LineOfBusiness, out ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, out ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, out ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            ConfigInterp.Test.Deployed.TestService.ListRequest inValue = new ConfigInterp.Test.Deployed.TestService.ListRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.CorrespondenceLocation = CorrespondenceLocation;
            inValue.Region = Region;
            inValue.UnisysUsercode = UnisysUsercode;
            inValue.UserId = UserId;
            inValue.Id = Id;
            inValue.LineOfBusiness = LineOfBusiness;
            ConfigInterp.Test.Deployed.TestService.DescriptionCommonResponse retVal = ((ConfigInterp.Test.Deployed.TestService.IConfigInterpService)(this)).GetCompareTypeDescription(inValue);
            Errors = retVal.Errors;
            FailureReason = retVal.FailureReason;
            Status = retVal.Status;
            return retVal.Descriptions;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConfigInterp.Test.Deployed.TestService.DescriptionCommonResponse ConfigInterp.Test.Deployed.TestService.IConfigInterpService.GetConditionTypeDescription(ConfigInterp.Test.Deployed.TestService.DefaultRequest request) {
            return base.Channel.GetConditionTypeDescription(request);
        }
        
        public ConfigInterp.Test.Deployed.TestService.DescriptionCommon[] GetConditionTypeDescription(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, out ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, out ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, out ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            ConfigInterp.Test.Deployed.TestService.DefaultRequest inValue = new ConfigInterp.Test.Deployed.TestService.DefaultRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.CorrespondenceLocation = CorrespondenceLocation;
            inValue.Region = Region;
            inValue.UnisysUsercode = UnisysUsercode;
            inValue.UserId = UserId;
            ConfigInterp.Test.Deployed.TestService.DescriptionCommonResponse retVal = ((ConfigInterp.Test.Deployed.TestService.IConfigInterpService)(this)).GetConditionTypeDescription(inValue);
            Errors = retVal.Errors;
            FailureReason = retVal.FailureReason;
            Status = retVal.Status;
            return retVal.Descriptions;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConfigInterp.Test.Deployed.TestService.DescriptionCommonResponse ConfigInterp.Test.Deployed.TestService.IConfigInterpService.GetExceptionDescription(ConfigInterp.Test.Deployed.TestService.SystemTypeRequest request) {
            return base.Channel.GetExceptionDescription(request);
        }
        
        public ConfigInterp.Test.Deployed.TestService.DescriptionCommon[] GetExceptionDescription(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.LineOfBusiness LineOfBusiness, out ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, out ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, out ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            ConfigInterp.Test.Deployed.TestService.SystemTypeRequest inValue = new ConfigInterp.Test.Deployed.TestService.SystemTypeRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.CorrespondenceLocation = CorrespondenceLocation;
            inValue.Region = Region;
            inValue.UnisysUsercode = UnisysUsercode;
            inValue.UserId = UserId;
            inValue.LineOfBusiness = LineOfBusiness;
            ConfigInterp.Test.Deployed.TestService.DescriptionCommonResponse retVal = ((ConfigInterp.Test.Deployed.TestService.IConfigInterpService)(this)).GetExceptionDescription(inValue);
            Errors = retVal.Errors;
            FailureReason = retVal.FailureReason;
            Status = retVal.Status;
            return retVal.Descriptions;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConfigInterp.Test.Deployed.TestService.FieldNameResponse ConfigInterp.Test.Deployed.TestService.IConfigInterpService.GetFieldNameDescription(ConfigInterp.Test.Deployed.TestService.ListRequest request) {
            return base.Channel.GetFieldNameDescription(request);
        }
        
        public ConfigInterp.Test.Deployed.TestService.FieldNameData[] GetFieldNameDescription(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, int Id, ConfigInterp.Test.Deployed.TestService.LineOfBusiness LineOfBusiness, out ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, out ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, out ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            ConfigInterp.Test.Deployed.TestService.ListRequest inValue = new ConfigInterp.Test.Deployed.TestService.ListRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.CorrespondenceLocation = CorrespondenceLocation;
            inValue.Region = Region;
            inValue.UnisysUsercode = UnisysUsercode;
            inValue.UserId = UserId;
            inValue.Id = Id;
            inValue.LineOfBusiness = LineOfBusiness;
            ConfigInterp.Test.Deployed.TestService.FieldNameResponse retVal = ((ConfigInterp.Test.Deployed.TestService.IConfigInterpService)(this)).GetFieldNameDescription(inValue);
            Errors = retVal.Errors;
            FailureReason = retVal.FailureReason;
            Status = retVal.Status;
            return retVal.Descriptions;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConfigInterp.Test.Deployed.TestService.DescriptionCommonResponse ConfigInterp.Test.Deployed.TestService.IConfigInterpService.GetFieldTypeDescription(ConfigInterp.Test.Deployed.TestService.SystemTypeRequest request) {
            return base.Channel.GetFieldTypeDescription(request);
        }
        
        public ConfigInterp.Test.Deployed.TestService.DescriptionCommon[] GetFieldTypeDescription(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.LineOfBusiness LineOfBusiness, out ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, out ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, out ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            ConfigInterp.Test.Deployed.TestService.SystemTypeRequest inValue = new ConfigInterp.Test.Deployed.TestService.SystemTypeRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.CorrespondenceLocation = CorrespondenceLocation;
            inValue.Region = Region;
            inValue.UnisysUsercode = UnisysUsercode;
            inValue.UserId = UserId;
            inValue.LineOfBusiness = LineOfBusiness;
            ConfigInterp.Test.Deployed.TestService.DescriptionCommonResponse retVal = ((ConfigInterp.Test.Deployed.TestService.IConfigInterpService)(this)).GetFieldTypeDescription(inValue);
            Errors = retVal.Errors;
            FailureReason = retVal.FailureReason;
            Status = retVal.Status;
            return retVal.Descriptions;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConfigInterp.Test.Deployed.TestService.FieldValidationInfoResponse ConfigInterp.Test.Deployed.TestService.IConfigInterpService.GetFieldValidationInfo(ConfigInterp.Test.Deployed.TestService.FieldValidationInfoRequest request) {
            return base.Channel.GetFieldValidationInfo(request);
        }
        
        public ConfigInterp.Test.Deployed.TestService.FieldValidationInfoData[] GetFieldValidationInfo(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, int FieldId, ConfigInterp.Test.Deployed.TestService.LineOfBusiness LineOfBusiness, int TypeId, out ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, out ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, out ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            ConfigInterp.Test.Deployed.TestService.FieldValidationInfoRequest inValue = new ConfigInterp.Test.Deployed.TestService.FieldValidationInfoRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.CorrespondenceLocation = CorrespondenceLocation;
            inValue.Region = Region;
            inValue.UnisysUsercode = UnisysUsercode;
            inValue.UserId = UserId;
            inValue.FieldId = FieldId;
            inValue.LineOfBusiness = LineOfBusiness;
            inValue.TypeId = TypeId;
            ConfigInterp.Test.Deployed.TestService.FieldValidationInfoResponse retVal = ((ConfigInterp.Test.Deployed.TestService.IConfigInterpService)(this)).GetFieldValidationInfo(inValue);
            Errors = retVal.Errors;
            FailureReason = retVal.FailureReason;
            Status = retVal.Status;
            return retVal.Data;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConfigInterp.Test.Deployed.TestService.SimpleInterpResponse ConfigInterp.Test.Deployed.TestService.IConfigInterpService.GetInterp(ConfigInterp.Test.Deployed.TestService.InquireRequest request) {
            return base.Channel.GetInterp(request);
        }
        
        public ConfigInterp.Test.Deployed.TestService.InquireSimpleOutputData GetInterp(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.InquireInputData Data, out ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, out ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, out ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            ConfigInterp.Test.Deployed.TestService.InquireRequest inValue = new ConfigInterp.Test.Deployed.TestService.InquireRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.CorrespondenceLocation = CorrespondenceLocation;
            inValue.Region = Region;
            inValue.UnisysUsercode = UnisysUsercode;
            inValue.UserId = UserId;
            inValue.Data = Data;
            ConfigInterp.Test.Deployed.TestService.SimpleInterpResponse retVal = ((ConfigInterp.Test.Deployed.TestService.IConfigInterpService)(this)).GetInterp(inValue);
            Errors = retVal.Errors;
            FailureReason = retVal.FailureReason;
            Status = retVal.Status;
            return retVal.Data;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConfigInterp.Test.Deployed.TestService.DetailedInterpResponse ConfigInterp.Test.Deployed.TestService.IConfigInterpService.GetInterpDetail(ConfigInterp.Test.Deployed.TestService.InquireRequest request) {
            return base.Channel.GetInterpDetail(request);
        }
        
        public ConfigInterp.Test.Deployed.TestService.InterpDetailOutData GetInterpDetail(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.InquireInputData Data, out ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, out ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, out ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            ConfigInterp.Test.Deployed.TestService.InquireRequest inValue = new ConfigInterp.Test.Deployed.TestService.InquireRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.CorrespondenceLocation = CorrespondenceLocation;
            inValue.Region = Region;
            inValue.UnisysUsercode = UnisysUsercode;
            inValue.UserId = UserId;
            inValue.Data = Data;
            ConfigInterp.Test.Deployed.TestService.DetailedInterpResponse retVal = ((ConfigInterp.Test.Deployed.TestService.IConfigInterpService)(this)).GetInterpDetail(inValue);
            Errors = retVal.Errors;
            FailureReason = retVal.FailureReason;
            Status = retVal.Status;
            return retVal.Data;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConfigInterp.Test.Deployed.TestService.DescriptionResponse ConfigInterp.Test.Deployed.TestService.IConfigInterpService.GetLevelDescription(ConfigInterp.Test.Deployed.TestService.LevelRequest request) {
            return base.Channel.GetLevelDescription(request);
        }
        
        public string GetLevelDescription(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.LevelData Data, out ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, out ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, out ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            ConfigInterp.Test.Deployed.TestService.LevelRequest inValue = new ConfigInterp.Test.Deployed.TestService.LevelRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.CorrespondenceLocation = CorrespondenceLocation;
            inValue.Region = Region;
            inValue.UnisysUsercode = UnisysUsercode;
            inValue.UserId = UserId;
            inValue.Data = Data;
            ConfigInterp.Test.Deployed.TestService.DescriptionResponse retVal = ((ConfigInterp.Test.Deployed.TestService.IConfigInterpService)(this)).GetLevelDescription(inValue);
            Errors = retVal.Errors;
            FailureReason = retVal.FailureReason;
            Status = retVal.Status;
            return retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConfigInterp.Test.Deployed.TestService.DescriptionResponse ConfigInterp.Test.Deployed.TestService.IConfigInterpService.GetOutlineDescription(ConfigInterp.Test.Deployed.TestService.OutlineRequest request) {
            return base.Channel.GetOutlineDescription(request);
        }
        
        public string GetOutlineDescription(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.OutlineData Data, out ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, out ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, out ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            ConfigInterp.Test.Deployed.TestService.OutlineRequest inValue = new ConfigInterp.Test.Deployed.TestService.OutlineRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.CorrespondenceLocation = CorrespondenceLocation;
            inValue.Region = Region;
            inValue.UnisysUsercode = UnisysUsercode;
            inValue.UserId = UserId;
            inValue.Data = Data;
            ConfigInterp.Test.Deployed.TestService.DescriptionResponse retVal = ((ConfigInterp.Test.Deployed.TestService.IConfigInterpService)(this)).GetOutlineDescription(inValue);
            Errors = retVal.Errors;
            FailureReason = retVal.FailureReason;
            Status = retVal.Status;
            return retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConfigInterp.Test.Deployed.TestService.DescriptionResponse ConfigInterp.Test.Deployed.TestService.IConfigInterpService.GetSubCategoryDescription(ConfigInterp.Test.Deployed.TestService.SubCategoryRequest request) {
            return base.Channel.GetSubCategoryDescription(request);
        }
        
        public string GetSubCategoryDescription(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.SubCategoryData Data, out ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, out ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, out ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            ConfigInterp.Test.Deployed.TestService.SubCategoryRequest inValue = new ConfigInterp.Test.Deployed.TestService.SubCategoryRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.CorrespondenceLocation = CorrespondenceLocation;
            inValue.Region = Region;
            inValue.UnisysUsercode = UnisysUsercode;
            inValue.UserId = UserId;
            inValue.Data = Data;
            ConfigInterp.Test.Deployed.TestService.DescriptionResponse retVal = ((ConfigInterp.Test.Deployed.TestService.IConfigInterpService)(this)).GetSubCategoryDescription(inValue);
            Errors = retVal.Errors;
            FailureReason = retVal.FailureReason;
            Status = retVal.Status;
            return retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConfigInterp.Test.Deployed.TestService.InquireInterpResponse ConfigInterp.Test.Deployed.TestService.IConfigInterpService.InquireInterpNarrative(ConfigInterp.Test.Deployed.TestService.InquireInterpRequest request) {
            return base.Channel.InquireInterpNarrative(request);
        }
        
        public ConfigInterp.Test.Deployed.TestService.InquireNarrativeOutputData InquireInterpNarrative(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.InquireInterpNarrativeData Data, out ConfigInterp.Test.Deployed.TestService.ErrorItem[] Errors, out ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, out ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            ConfigInterp.Test.Deployed.TestService.InquireInterpRequest inValue = new ConfigInterp.Test.Deployed.TestService.InquireInterpRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.CorrespondenceLocation = CorrespondenceLocation;
            inValue.Region = Region;
            inValue.UnisysUsercode = UnisysUsercode;
            inValue.UserId = UserId;
            inValue.Data = Data;
            ConfigInterp.Test.Deployed.TestService.InquireInterpResponse retVal = ((ConfigInterp.Test.Deployed.TestService.IConfigInterpService)(this)).InquireInterpNarrative(inValue);
            Errors = retVal.Errors;
            FailureReason = retVal.FailureReason;
            Status = retVal.Status;
            return retVal.Data;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConfigInterp.Test.Deployed.TestService.ChangeInterpResultResponse ConfigInterp.Test.Deployed.TestService.IConfigInterpService.UpdateInterpConfig(ConfigInterp.Test.Deployed.TestService.UpdateInterpDetailRequest request) {
            return base.Channel.UpdateInterpConfig(request);
        }
        
        public ConfigInterp.Test.Deployed.TestService.ErrorItem[] UpdateInterpConfig(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.InterpDetailData Data, out ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, out ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            ConfigInterp.Test.Deployed.TestService.UpdateInterpDetailRequest inValue = new ConfigInterp.Test.Deployed.TestService.UpdateInterpDetailRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.CorrespondenceLocation = CorrespondenceLocation;
            inValue.Region = Region;
            inValue.UnisysUsercode = UnisysUsercode;
            inValue.UserId = UserId;
            inValue.Data = Data;
            ConfigInterp.Test.Deployed.TestService.ChangeInterpResultResponse retVal = ((ConfigInterp.Test.Deployed.TestService.IConfigInterpService)(this)).UpdateInterpConfig(inValue);
            FailureReason = retVal.FailureReason;
            Status = retVal.Status;
            return retVal.Errors;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConfigInterp.Test.Deployed.TestService.InterpNarrativeResponse ConfigInterp.Test.Deployed.TestService.IConfigInterpService.UpdateInterpNarrative(ConfigInterp.Test.Deployed.TestService.UpdateInterpRequest request) {
            return base.Channel.UpdateInterpNarrative(request);
        }
        
        public ConfigInterp.Test.Deployed.TestService.ErrorItem[] UpdateInterpNarrative(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.UpdateInterpNarrativeData Data, out ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, out ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            ConfigInterp.Test.Deployed.TestService.UpdateInterpRequest inValue = new ConfigInterp.Test.Deployed.TestService.UpdateInterpRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.CorrespondenceLocation = CorrespondenceLocation;
            inValue.Region = Region;
            inValue.UnisysUsercode = UnisysUsercode;
            inValue.UserId = UserId;
            inValue.Data = Data;
            ConfigInterp.Test.Deployed.TestService.InterpNarrativeResponse retVal = ((ConfigInterp.Test.Deployed.TestService.IConfigInterpService)(this)).UpdateInterpNarrative(inValue);
            FailureReason = retVal.FailureReason;
            Status = retVal.Status;
            return retVal.Errors;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConfigInterp.Test.Deployed.TestService.ChangeInterpResultResponse ConfigInterp.Test.Deployed.TestService.IConfigInterpService.UpdateInterpStatus(ConfigInterp.Test.Deployed.TestService.StatusChangeRequest request) {
            return base.Channel.UpdateInterpStatus(request);
        }
        
        public ConfigInterp.Test.Deployed.TestService.ErrorItem[] UpdateInterpStatus(string ApplicationId, string CorrespondenceLocation, int Region, string UnisysUsercode, string UserId, ConfigInterp.Test.Deployed.TestService.StatusData Data, out ConfigInterp.Test.Deployed.TestService.OperationResult FailureReason, out ConfigInterp.Test.Deployed.TestService.ResponseStatus Status) {
            ConfigInterp.Test.Deployed.TestService.StatusChangeRequest inValue = new ConfigInterp.Test.Deployed.TestService.StatusChangeRequest();
            inValue.ApplicationId = ApplicationId;
            inValue.CorrespondenceLocation = CorrespondenceLocation;
            inValue.Region = Region;
            inValue.UnisysUsercode = UnisysUsercode;
            inValue.UserId = UserId;
            inValue.Data = Data;
            ConfigInterp.Test.Deployed.TestService.ChangeInterpResultResponse retVal = ((ConfigInterp.Test.Deployed.TestService.IConfigInterpService)(this)).UpdateInterpStatus(inValue);
            FailureReason = retVal.FailureReason;
            Status = retVal.Status;
            return retVal.Errors;
        }
    }
}
